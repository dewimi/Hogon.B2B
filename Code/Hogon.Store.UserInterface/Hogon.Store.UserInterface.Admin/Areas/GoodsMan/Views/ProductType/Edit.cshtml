@{
    ViewBag.Title = "产品类型管理";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}
    <!-- jQuery 表单验证-->
<script src="~/Scripts/hogon/js/plugins/validate/jquery.validate.min.js"></script>
<script src="~/Scripts/hogon/js/plugins/validate/messages_zh.min.js"></script>

<!-- Data Tables -->
<script src="~/Scripts/hogon/js/plugins/dataTables/jquery.dataTables.js"></script>
<script src="~/Scripts/hogon/js/plugins/dataTables/dataTables.bootstrap.js"></script>


<!-- iCheck-->
<script src="~/Scripts/hogon/js/plugins/iCheck/icheck.min.js"></script>
<script src="~/Scripts/hogon/js/plugins/fileinput/fileinput.min.js"></script>
<script src="~/Scripts/hogon/js/plugins/fileinput/fileinput-zh.js"></script>


<div class="form-group">
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>基本信息</h5>
                    </div>
                    <div class="ibox-content">
                        <form method="get" class="form-horizontal" id="basicForm" name="myForm" novalidate>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">类型名称</label>
                                <div class="col-sm-4">
                                    <input type="text" name="name" class="form-control" ng-model="ProductTypeName" placeholder="请输入类型名称" required>
                                </div>
                                <input style="display:none" type="text" name="name" class="form-control" ng-model="isexist">
                                <span style="display:none;color:red" id="name-error">类型名称已存在</span>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-3 control-label">所属分类</label>
                                <div class="col-sm-4">
                                    <input type="text" ng-model="SpecCatalog" name="SpecCatalog" id="" class="form-control" value=""
                                           onclick="$('#treeview-checkable').show()" placeholder="分类名称" ReadOnly="readonly">
                                    <div id="treeview-checkable" style="display:none;"></div>
                                </div>
                            </div>

                            <div class="form-group" id="specTypeDiv" style="display:none;">
                                <label class="col-sm-3 control-label"></label>
                                <div class="col-sm-4">
                                    <a class="specType">新增规格类型</a>
                                </div>
                            </div>

                            <div class="form-group" style="display:none;" id="tablelist">
                                <label class="col-sm-3 control-label"></label>

                                <div class="col-sm-7">
                                    <table class="table" id="table_local">
                                        <thead>
                                            <tr>
                                                <th>规格名称</th>
                                                <th>规格备注</th>
                                                <th>规格别名</th>
                                                <th>显示类型</th>
                                                <th>显示方式</th>
                                                <th>操作</th>
                                            </tr>
                                        </thead>
                                        <tbody class="tbodylist"></tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-3"></label>
                                <div class="col-sm-8">
                                    <button class="btn btn-primary" type="submit" ng-click="saveChange()">保存内容</button>
                                    <button class="btn btn-white" type="submit">取消</button>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>
<div class="modal fade" id="specTypeview" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content col-sm-5">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">新增功能菜单</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="ibox float-e-margins">
                            <form method="get" class="form-horizontal" id="commentForm">
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">产品类型</label>
                                    <div class="col-sm-7">
                                        <select class="form-control" ng-model="proType" name="proType" id="proType">
                                            <option ng-model="typeName" class="typename"></option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">规格名称</label>
                                    <div class="col-sm-7">
                                        <input type="text" name="SpecName" class="form-control" ng-model="SpecName" required>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">规格备注</label>
                                    <div class="col-sm-7">
                                        <textarea class="form-control" name="SpecRemark" ng-model="SpecRemark" row="4" required></textarea>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">规格别名</label>
                                    <div class="col-sm-7">
                                        <input type="text" name="SpecSecondName" class="form-control" ng-model="SpecSecondName" required>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">显示类型</label>
                                    <div class="col-sm-7">
                                        <div class="radio i-checks">
                                            <label>
                                                <input type="radio" name="DisplayName" ng-model="DisplayName" value="文字" checked> <i></i> 文字
                                            </label>
                                            <label>
                                                <input type="radio" name="DisplayName" ng-model="DisplayName" value="图片"> <i></i> 图片
                                            </label>
                                        </div>

                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-4 control-label">显示方式</label>
                                    <div class="col-sm-7">
                                        <div class="radio i-checks">
                                            <label>
                                                <input type="radio" name="DisplayMode" ng-model="DisplayMode" value="下拉" checked> <i></i> 下拉
                                            </label>
                                            <label>
                                                <input type="radio" name="DisplayMode" ng-model="DisplayMode" value="平铺"> <i></i> 平铺
                                            </label>
                                        </div>
                                    </div>
                                    <input type="hidden" name="id" ng-model="CreateTime" />
                                </div>
                                <div class="form-group" style="display:none;" id="parameterId">
                                    <label class="col-sm-4 control-label">参数名称</label>
                                    <div class="col-sm-7">
                                        <input type="text" name="parameterName" class="form-control" ng-model="parameterName" required>

                                    </div>
                                </div>
                                <div class="form-group" style="display:none;" id="fileupload">
                                    <label class="col-sm-4 control-label">图片上传</label>
                                    <div class="col-sm-7">

                                        <input type="file" id="input-dim-2" class="file-loading">
                                    </div>
                                </div>
                                <div class="form-group" style="display:none" id="spectypeparameter">
                                    <div class="col-sm-12">
                                        <input type="hidden" name="id" ng-model="specId" />
                                        <input type="hidden" name="displayName" ng-model="displayName"/>
                                        <input type="hidden" name="parameter" ng-model="parameterId"/>
                                        <div class="ibox float-e-margins">
                                            <div class="ibox-content">
                                                <div class="">
                                                    <button id="addNewTr" href="javascript:void(0);" class="btn btn-primary btn-xs ">添加行</button>
                                                </div>
                                                <table class="table table-responsive table-striped table-bordered table-hover " id="editable">
                                                    <thead>
                                                        <tr>
                                                            <th>参数名称</th>
                                                            <th>操作</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" ng-click="SaveSpecType()">保存</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $.validator.setDefaults({
        highlight: function (element) {
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
        },
        success: function (element) {
            element.closest('.form-group').removeClass('has-error').addClass('');
        },
        errorElement: "span",
        errorPlacement: function (error, element) {
            if (element.is(":radio") || element.is(":checkbox")) {
                error.appendTo(element.parent().parent().parent());
            } else {
                error.appendTo(element.parent());
            }
        },
        errorClass: "help-block m-b-none",
        validClass: "help-block m-b-none"
    });

    var fileUrl, fileName, fileSize, fileType;
    var app = angular.module('myApp', []);
    app.controller('validateCtrl', function ($scope, $http) {

        //绑定产品类型
        $scope.bindProductType = function () {

            $http({
                method: 'POST',
                url: '/GoodsMan/ProductType/GetAllProductType',
                data: null
            }).then(function successCallback(response) {
                // 请求成功执行代码
                $("#proType").click(function () {
                    $("#proType option[value='meren']").remove()
                })
                $.each(response.data, function (index, v) {

                    if (v.ParentId == null) {
                        var option = $("<option value = '" + v.Id + "'></option>").text(v.TypeName);
                        $("#proType").append(option);
                    }
                })

            }, function errorCallback(response) {
                // 请求失败执行代码

            });
        };
        $scope.bindProductType();

        var id = window.location.search;
        id = id.substring(id.indexOf('=') + 1);
        $scope.proTypeId = id;

        //页面加载根据Id绑定相应数据
        $scope.GetBindData = function () {

            //编辑
            $http({
                method: 'POST',
                url: '/GoodsMan/ProductType/GetProductTypeById',
                data: { Id: $scope.proTypeId }
            }).then(function successCallback(response) {
                // 请求成功执行代码
                $scope.proTypeId = response.data.Id;
                $scope.ProductTypeName = response.data.TypeName;
                $scope.SpecCatalog = response.data.ProductTypeCategoryName;
                $("[name='SpecCatalog']").attr("id", response.data.CategoryId)
                $("#specTypeDiv").show();
                $("#tablelist").show();
                $scope.BindSpecTypeList(response.data.Id);
                $scope.skipSpecType(response.data.Id);
            }, function errorCallback(response) {
                // 请求失败执行代码
            });
        };

        if (id != "") {
            $scope.GetBindData();
        }

        //保存产品类型
        $scope.saveChange = function () {

            var ProductTypeName = $scope.ProductTypeName;
            var categoryId = $("[name='SpecCatalog']").attr("id");
            $scope.ProductTypeCategory = {
                "Id": $scope.Guid,
                "TypeName": ProductTypeName,
                categoryId: categoryId
            };

            $http({
                method: 'POST',
                url: '/GoodsMan/ProductType/Save',
                data: $scope.ProductTypeCategory
            }).then(function successCallback(response) {
                // 请求成功执行代码
                swal("保存成功！")
                $("#specTypeDiv").show();
                $scope.proTypeId = response.data;
                $scope.skipSpecType(response.data);
            }, function errorCallback(response) {
                // 请求失败执行代码
            });
        };

        //生成分类菜单
        $scope.BindProductTypeCategory = function () {

            $http({
                method: 'POST',
                url: '/GoodsMan/ProductTypeCategory/GetAllCategoryNodes',
                data: $scope.ProductTypeCategory
            }).then(function successCallback(response) {
                // 请求成功执行代码

                CreateTreeCategory(response.data);

            }, function errorCallback(response) {
                // 请求失败执行代码
            });
        };
        $scope.BindProductTypeCategory();

        //弹出规格类型新增页面
        $scope.skipSpecType = function (proTypeId) {

            $(".specType").on("click", function () {
                $("#myModalLabel").text("添加规格类型");
                $('#specTypeview').modal();
                $scope.bindProductTypeById(proTypeId);
            });
        };

        //根据产品Id绑定产品类型
        $scope.bindProductTypeById = function (proTypeId) {

            $scope.Id = proTypeId;
            $http({
                method: 'POST',
                url: '/GoodsMan/ProductType/GetProductTypeById',
                data: JSON.stringify({ Id: $scope.Id })
            }).then(function successCallback(response) {
                // 请求成功执行代码
                $("#proType option[value='meren']").remove();
                $(".typename").text(response.data.TypeName);
                //$scope.typeName = response.data.TypeName;
            }, function errorCallback(response) {
                // 请求失败执行代码

            });

        };

        //保存规格类型
        $scope.SaveSpecType = function () {
            //如果没上传图片就只保存规格类型
            if (fileName == null && fileSize == null && fileType == null && fileUrl == null && $scope.parameterName == null) {
                var displayName, displayMode;
                if ($scope.DisplayName != null) {
                    displayName = $scope.DisplayName;
                }
                if ($scope.DisplayMode != null) {
                    displayMode = $scope.DisplayMode;
                }
                var proType = $(".typename").text();
                var jsondata = { "Id": $scope.specTypeId, "SpecName": $scope.SpecName, "SpecCatalog": proType, "SpecRemark": $scope.SpecRemark, "SpecSecondName": $scope.SpecSecondName, "CreateTime": $scope.CreateTime, "DisplayName": displayName, "DisplayMode": displayMode, productTypeId: $scope.proTypeId }
                $http({
                    method: 'POST',
                    url: '/GoodsMan/SpecType/SaveSpecType',
                    data: JSON.stringify(jsondata)
                }).then(function successCallback(response) {
                    // 请求成功执行代码
                    swal("保存成功！");
                    $scope.specId = response.data;
                    $scope.displayName = displayName;
                    $("#tablelist").show();
                   // $scope.BindSpecTypeList(response.data);
                    $scope.addSpecParameter(displayName);
                    $scope.BindSpecTypeList($scope.proTypeId);

                }, function errorCallback(response) {
                    // 请求失败执行代码

                });

            } else if ($scope.parameterName != null) {
                //保存规格参数
                $scope.saveSpecTypeParameter($scope.specId, $scope.displayName);

            }

        };

        //绑定规格类型列表
        $scope.BindSpecTypeList = function (proTypeId) {
            $http({
                method: 'POST',
                url: '/GoodsMan/ProductType/GetSpecTypeByProTypeId',
                data: { productId: proTypeId }
            }).then(function successCallback(response) {
                // 请求成功执行代码
                CreateSpecTypeTable(response.data);
                $(".detail").on("click", function () {
                    var id = $(this).attr("id");
                    window.location.href = "/GoodsMan/SpecType/Detail?id =" + id;
                });
                $(".edit").on("click", function () {
                    var id = $(this).attr("id");
                    window.location.href = "/GoodsMan/SpecType/Edit?id =" + id;
                });
                $(".delet").on("click", function () {
                    var id = $(this).attr("id");
                    swal({
                        title: "操作提示",
                        text: "确认删除吗?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        cancelButtonText: "取消",
                        confirmButtonText: "确定",
                        closeOnConfirm: false
                    }, function () {

                        $http({
                            method: 'POST',
                            url: '/GoodsMan/SpecType/Remove',
                            data: JSON.stringify({ Id: id })
                        }).then(function successCallback(response) {
                            // 请求成功执行代码
                            swal("删除成功", "", "success");
                            $scope.BindSpecTypeList($scope.proTypeId);
                        }, function errorCallback(response) {
                            // 请求失败执行代码
                            swal(response.data, "", "warning");
                        });
                    });
                });

            }, function errorCallback(response) {
                // 请求失败执行代码
            });

        };

        //保存规格参数
        $scope.saveSpecTypeParameter = function (specId, displayName) {
            if (displayName == "图片") {
                if (fileName == null && fileSize == null && fileType == null && fileUrl == null) {
                    swal("请上传图片");
                }
                else {
                    $http({
                        method: 'POST',
                        url: '/FileUpload/SeveFile',
                        data: JSON.stringify({ FileName: fileName, FileType: fileType, FileSize: fileSize, Url: fileUrl })
                    }).then(function successCallback(response) {

                        $scope.master = { ParameterName: $scope.parameterName, specTypeId: specId, fileId: response.data };
                        $http({
                            method: 'POST',
                            url: '/GoodsMan/SpecType/SaveSpecParameter',
                            data: JSON.stringify($scope.master)
                        }).then(function successCallback(response) {
                            //绑定规格参数列表
                            swal("保存图片参数成功！");
                        }, function errorCallback(response) {
                            // 请求失败执行代码
                        });
                    }, function errorCallback(response) {
                        // 请求失败执行代码
                    });
                }
            }
        };
        
        //绑定规格参数列表
        $scope.bindSpecParameter = function (specTypeId) {

        };

        //根据选择的显示类型显示相应的页面
        $scope.addSpecParameter = function (displayName) {

            //$("[title='添加规格参数']").on("click", function () {
            if (displayName == "文字") {
                $("#parameterId").hide();
                $("#fileupload").hide();
                $("#spectypeparameter").show();

            } else if (displayName == "图片") {
                $("#spectypeparameter").hide();
                $("#parameterId").show();
                $("#fileupload").show();

            }

            // });
        };

        ////图片上传成功回调函数
        $("#input-dim-2").on("fileuploaded", function (event, data, previewId, index) {

            fileUrl = data.response.fileUrl;
            fileName = data.response.fileName;
            fileSize = data.response.fileSize;
            fileType = data.response.fileType;
        });

        //创建图片上传控件
        $("#input-dim-2").fileinput({
            uploadUrl: '/FileUpload/FileUpload',
            allowedFileExtensions: ["jpg", "png", "gif"],
            maxImageWidth: 50,
            maxImageHeight: 50,
            uploadLabel: "",
            uploadTitle: "上传文件",
            removeLabel: "",
            removeTitle: "删除文件",
            browseLabel: "",
            maxFileCount: 1,
            previewFileType: "image",
            browseLabel: "",
            browseIcon: "<i class=\"glyphicon glyphicon-picture\"></i> ",
        });

        var t = $('#editable').DataTable({
            "bInfo": false,
            "bPaginate": false,
            "bFilter": false

        });
        $("#editable tbody").on("click", ".edit-btn", function () {
            var tds = $(this).parents("tr").children();
            $.each(tds, function (i, val) {
                var jqob = $(val);
                //跳过第1项 序号,按钮 i < 1 ||
                if (jqob.has('button').length) {
                    return true;
                }
                var txt = jqob.text();
                var put = $("<input type='text'>");
                put.val(txt);
                jqob.html(put);
            });
            $(this).html("保存");
            $(this).toggleClass("edit-btn");
            $(this).toggleClass("save-btn");
        });

        $("#editable tbody").on("click", ".save-btn", function () {
            var row = t.row($(this).parents("tr"));
            var tds = $(this).parents("tr").children();
            $.each(tds, function (i, val) {
                var jqob = $(val);
                //把input变为字符串
                if (!jqob.has('button').length) {
                    var txt = jqob.children("input").val();
                    jqob.html(txt);
                    //t.cell(jqob).data(txt);//修改DataTables对象的数据
                    var parameterNameId = $(".save-btn").attr("id");
                    $scope.master = { Id: parameterNameId, ParameterName: txt, specTypeId: $scope.specId };
                    $http({
                        method: 'POST',
                        url: '/GoodsMan/SpecType/SaveSpecParameter',
                        data: JSON.stringify($scope.master)
                    }).then(function successCallback(response) {
                        //绑定规格参数列表
                        $("#saveParameterName").attr("id",response.data)
                    }, function errorCallback(response) {
                        // 请求失败执行代码
                    });
                }
            });
            $(this).html("编辑");
            $(this).toggleClass("edit-btn");
            $(this).toggleClass("save-btn");

        });
        $("#addNewTr").on("click", function () {
            t.row.add([
                "<input type='text'/>",
                "<button class='save-btn btn btn-primary btn-xs'id='saveParameterName'>保存</button>"
            ]).draw();
        });

    });

    $(function () {

        $("#basicForm").validate();
        $("#commentForm").validate();

        //创建规格参数列表
        function CreateTable() {
            $("tr[name='DataTr']").remove();
            $.each(5, function (index, v) {
                var $tr = $("<tr name='DataTr'></tr>");
                var $td1 = $("<td></td>").text();
                $tr.append($td1);
                $(".parameterlist").append($tr);
            });
        }

    });

    //创建规格类型表格
    function CreateSpecTypeTable(data) {
        $("tr[name='DataTr']").remove();
        $.each(data, function (index, v) {
            var $tr = $("<tr name='DataTr'></tr>");
            var $td1 = $("<td></td>").text(v.SpecName);
            var $td2 = $("<td></td>").text(v.SpecRemark);
            var $td3 = $("<td></td>").text(v.SpecSecondName);
            var $td4 = $("<td></td>").text(v.DisplayName);
            var $td5 = $("<td></td>").text(v.DisplayMode);
            var $td6 = $("<td></td>")
             .append("<a title='查看明细' class='detail' "
                             + " id = '" + v.Id + "'> <span class='glyphicon glyphicon-zoom-in "
                             + "aria-hidden=' true''></span></a>")
             .append("&nbsp&nbsp<a title='编辑' class='edit' "
                             + " id = '" + v.Id + "'> <span class='glyphicon "
                             + "glyphicon-pencil aria-hidden=' true''></span></a>")
             .append("&nbsp&nbsp<a title='删除' class='delet' id = '" + v.Id + "'> "
                              + "<span class='glyphicon glyphicon-trash aria-hidden=' "
                              + "true''></span></a>");
            $tr.append($td1).append($td2).append($td3).append($td4).append($td5).append($td6);
            $(".tbodylist").append($tr);
        });
    }
    //创建树形菜单
    function CreateTreeCategory(data) {
        $("[name='SpecCatalog']").on("click", function () {
            $('#treeview-checkable').treeview({
                showCheckbox: true,
                data: data,
                //onNodeChecked: nodeChecked,
                //onNodeUnchecked: nodeUnchecked,
                onNodeSelected: function (event, data) {
                    $("[name='SpecCatalog']").val(data.text);
                    $("[name='SpecCatalog']").attr("id", data.Id);
                    $("#treeview-checkable").hide();
                }
            });
        });

    }

</script>


